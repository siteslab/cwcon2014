***************
*** 75,84 ****
    // Abstract over the actual field columns, to allow different field types to
    // reuse those widgets.
    $value_key = key($field['columns']);
- 
-   //not used but you never know :-)
-   $handler = $field['settings']['handler'];
- 
    $type = str_replace('options_', '', $instance['widget']['type']);
    //$multiple = $field['cardinality'] > 1 || $field['cardinality'] == FIELD_CARDINALITY_UNLIMITED;
    $multiple = $field['cardinality'];
--- 75,80 ----
    // Abstract over the actual field columns, to allow different field types to
    // reuse those widgets.
    $value_key = key($field['columns']);
    $type = str_replace('options_', '', $instance['widget']['type']);
    //$multiple = $field['cardinality'] > 1 || $field['cardinality'] == FIELD_CARDINALITY_UNLIMITED;
    $multiple = $field['cardinality'];
***************
*** 97,103 ****
    /* END copy from options.module */
  
    $widget = _multiselect_build_widget_code($options, $items, $element, $required);
-   
    //for each selected item ($items are in delta order still), we unset the item from $options (which is in nid/tid order)
    //then just re-append it to the bottom of the options array, in order of $items, this fools the FAPI and retains order on edit
    foreach ($items as $item) {
--- 93,99 ----
    /* END copy from options.module */
  
    $widget = _multiselect_build_widget_code($options, $items, $element, $required);
+ 
    //for each selected item ($items are in delta order still), we unset the item from $options (which is in nid/tid order)
    //then just re-append it to the bottom of the options array, in order of $items, this fools the FAPI and retains order on edit
    foreach ($items as $item) {
***************
*** 142,152 ****
   * After_build callback for this widget.
   */
  function _multiselect_after_build($element, $form_state) {
    $value_key = $element['#columns'][0];
    $items = array();
  
-   if (isset($form_state['values'][$element['#field_name']][$element['#language']])) {
-     foreach ($form_state['values'][$element['#field_name']][$element['#language']] as $nid) {
        $items[] = array($value_key => $nid);
      }
    }
--- 138,149 ----
   * After_build callback for this widget.
   */
  function _multiselect_after_build($element, $form_state) {
+   $lg = isset($element['#language']) ? $element['#language'] : LANGUAGE_NONE;
    $value_key = $element['#columns'][0];
    $items = array();
  
+   if (isset($form_state['values'][$element['#field_name']][$lg])) {
+     foreach ($form_state['values'][$element['#field_name']][$lg] as $nid) {
        $items[] = array($value_key => $nid);
      }
    }
